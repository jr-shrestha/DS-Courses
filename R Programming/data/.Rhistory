ds$V6 <- a
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table(ds$V5, ds$V6)
table(ds$V6, ds$V5)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table(ds$V5, ds$V6)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table(ds$V4, ds$V6)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
summary(ds$V4, ds$V6)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
summary(ds$V4 ~ ds$V6)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
summary(ds$V6 4 ds$V5)
summary(a)
summary(ds)
summary(ds$V6 ~ ds$V4)
summary(ds$V4 ~ ds$V6)
mean(ds$V6 ~ ds$V4)
mean(ds$V6,ds$V4)
mean(ds$V4,ds$V6)
mean(ds$V4)
mean(ds$V4, sep (a))
mean(ds$V4, sep= (a))
mean(table(ds$V4, ds$V6))
table(ds$V4, ds$V6)
View(ds)
mean(subset(ds, ds$V6 == "(0,0.5]"))
mean(subset(ds, ds$V6 == (0,0.5]))
mean(b$V4 <- subset(ds, ds$V6 == (0,0.5]))
mean(b$V4 <- subset(ds, ds$V6 == "(0,0.5]"))
mean(b$V4, b <- subset(ds, ds$V6 == "(0,0.5]"))
mean(b$V4; b <- subset(ds, ds$V6 == "(0,0.5]"))
b <- subset(ds, ds$V6 == "(0,0.5]"); mean(b$V4)
View(ds)
View(ds)
ds$V7 <- ds$V4/ ds$V4
View(ds)
ds$V7 <- ds$V4/ ds$V3
View(ds)
pearson
pear
table(ds$V4, ds$V6)
table(ds$V5, ds$V6)
plot(table(ds$V5, ds$V6))
plot(table(ds$V5, ds$V6), type = l)
plot(table(ds$V5, ds$V6), type = line)
plot(table(ds$V5, ds$V6), type = "line")
lm(table(ds$V5, ds$V6))
lm(ds$V5 ~ ds$V6)
lm(ds$V6 ~ ds$V5)
?table
addmargins(table(ds$V5, ds$V6))
table <-  addmargins(table(ds$V5, ds$V6))
table
table[1]
table[2]
table[4]
table[5]
margin.table(ds$V5, ds$V6))
margin.table(table, 1))
margin.table(table, 1)
margin.table(table, 2)
prop.table(table, 2)
prop.table(able(ds$V5, ds$V6), 2)
prop.table(table(ds$V5, ds$V6), 2)
?addmargins
addmargins(table(ds$V5, ds$V6), margin=2)
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table
prop.table(table, 2)
as.matrix(table)
table <- as.matrix(table)
table[,1]
table[1,]
quetelet <- table
quetelet <- table
quetelet[1,1]
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[1,1]
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1]
quetelet[1,1]
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[1,1]
table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
quetelet
table2 <- addmargins(table(ds$V5, ds$V6), margin=2)
expected(table2)
survexp(table2)
source('~/.active-rstudio-document')
CrossTable(ds$V5, ds$V6)
CrossTable(ds$V5, ds$V6, expected = TRUE)
expected <- as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2))) / margin.table(table2)
expected
table2
table2 <- addmargins(table(ds$V5, ds$V6))
expected <- as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2))) / margin.table(table2)
expected
table2
table2 <- table(ds$V5, ds$V6)
table2
expected <- as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2))) / margin.table(table2)
expected
expected <- as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2))) / 150
expected
expected <- as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2))) / 150/150
expected
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)
expected
expected
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2))))
expected
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
expected
(expected - as.array(table2))^2/expected)
expected - as.array(table2))^2/expected
(expected - as.array(table2))^2/expected
(as.array(table2)- expected )^2/expected
((as.array(table2)- expected )^2)/expected
prop.table(table2))
prop.table(table2)
((as.array(prop.table(table2))- expected )^2)/expected
quetelet
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
table2 <- table(ds$V5, ds$V6)
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
pearson <- ((as.array(prop.table(table2))- expected )^2)/expected
quetelet
pearson
as.vector(pearson)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
table2 <- table(ds$V5, ds$V6)
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
pearson <- ((as.array(prop.table(table2))- expected )^2)/expected
as.vector(quetelet)
as.vector(pearson)
round(as.vector(quetelet),3)
round(as.vector(pearson),3)
expected2 <- (as.array(table2) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)
expected2 <- (as.array(table2) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2,2)
expected2 <- (as.array((margin.table(table2)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2,2)
expected2 <- (as.array((margin.table(table2))) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2,2)
expected2 <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)
expected2
expected2 <- as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2))) / margin.table(table2)
expected2 <- as.array(margin.table(table2)) %*% t(as.array(margin.table(table2,2))) / margin.table(table2)
expected2
expected2 <- as.array(table2) %*% t(as.array(margin.table(table2,2))) / margin.table(table2)
expected2 <- as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2))) / margin.table(table2)
expected2
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
table2 <- table(ds$V5, ds$V6)
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
pearson <- ((as.array(prop.table(table2))- expected )^2)/expected
round(as.vector(quetelet),3)
round(as.vector(pearson),3)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
table2 <- table(ds$V5, ds$V6)
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
pearson <- ((as.array(prop.table(table2))- expected )^2)/expected
round(as.vector(quetelet),3)
round(as.vector(pearson),3)
round(quetelet,3)
round(pearson,3)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
table2 <- table(ds$V5, ds$V6)
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
pearson <- ((as.array(prop.table(table2))- expected )^2)/expected
round(quetelet,3)
round(pearson,3)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
table2 <- table(ds$V5, ds$V6)
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
pearson <- ((as.array(prop.table(table2))- expected )^2)/expected
round(quetelet,3)
round(pearson,3)
table3 <- table(ds$V5, ds$V6)
addmargins(table3)
53/150
(1 - 0.3533333)/0.3533333
48/53
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
table2 <- table(ds$V5, ds$V6)
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
pearson <- ((as.array(prop.table(table2))- expected )^2)/expected
round(quetelet,3)
round(pearson,3)
ds <- read.table("dataset_390_1.txt")
a <- cut(ds$V4, breaks = c(0, 0.5, 1.5, 2, 2.5))
ds$V6 <- a
table <- addmargins(table(ds$V5, ds$V6), margin=2)
table <- prop.table(table, 2)
table <- as.matrix(table)
quetelet <- table
quetelet[1,1] <- ((table[1,1]-table[1,5])/table[1,5])
quetelet[2,1] <- ((table[2,1]-table[2,5])/table[2,5])
quetelet[3,1] <- ((table[3,1]-table[3,5])/table[3,5])
quetelet[1,2] <- ((table[1,2]-table[1,5])/table[1,5])
quetelet[2,2] <- ((table[2,2]-table[2,5])/table[2,5])
quetelet[3,2] <- ((table[3,2]-table[3,5])/table[3,5])
quetelet[1,3] <- ((table[1,3]-table[1,5])/table[1,5])
quetelet[2,3] <- ((table[2,3]-table[2,5])/table[2,5])
quetelet[3,3] <- ((table[3,3]-table[3,5])/table[3,5])
quetelet[1,4] <- ((table[1,4]-table[1,5])/table[1,5])
quetelet[2,4] <- ((table[2,4]-table[2,5])/table[2,5])
quetelet[3,4] <- ((table[3,4]-table[3,5])/table[3,5])
table2 <- table(ds$V5, ds$V6)
expected <- (as.array(margin.table(table2,1)) %*% t(as.array(margin.table(table2,2)))) / margin.table(table2)/margin.table(table2)
pearson <- ((as.array(prop.table(table2))- expected )^2)/expected
quetelet
pearson
((table[1,1]-table[1,5])/table[1,5])
table3 <- table(ds$V5, ds$V6)
addmargins(table3)
54/100
54/150
(1-.36)/.36
.36*.36
table3 <- addmargins(table3)
as.array(table3)[1]
as.array(table3)[2]
as.array(table3)[3]
as.array(table3)[5]
prop.table(as.array(table3))
round(prop.table(as.array(table3)),3)
prop.table(as.array(table3))
round(prop.table(as.matrix(table3)),3)
round(prop.table(as.matrix(table3)[c(1,3),c(1,4)]),3)
round(prop.table(as.matrix(table3)[c(1,2,3),c(1,2,3,4)]),3)
round(prop.table(as.matrix(table3)[c(1,2,3),c(1,2,3,4)]))
prop.table(as.matrix(table3)[c(1,2,3),c(1,2,3,4)]))
prop.table(as.matrix(table3)[c(1,2,3),c(1,2,3,4)])
table3 <- table(ds$V5, ds$V6)
prop.table(as.matrix(table3)
)
prop.table(table3)
addmargins(prop.table(table3))
addmargins(prop.table(table3, 2))
addmargins(prop.table(table3, 1))
addmargins(prop.table(table3, 2))
addmargins(prop.table(table3, 2),1)
addmargins(prop.table(table3, 2),1);addmargins(table3,2)
as.matrix(addmargins(prop.table(table3, 2),1)) as.matrix(addmargins(table3,2))
as.matrix(addmargins(prop.table(table3, 2),1)); as.matrix(addmargins(table3,2))
as.matrix(addmargins(prop.table(table3, 2),1)); as.matrix(addmargins(table3,2))[,5]
as.matrix(addmargins(prop.table(table3, 2),1)), as.matrix(addmargins(table3,2))[,5]
paste(as.matrix(addmargins(prop.table(table3, 2),1)), as.matrix(addmargins(table3,2))[,5])
cbind(as.matrix(addmargins(prop.table(table3, 2),1)), as.matrix(addmargins(table3,2))[,5])
cbind(as.matrix(addmargins(prop.table(table3, 2),1)), as.matrix(addmargins(table3,2))[,5])
cbind(as.matrix(addmargins(prop.table(table3, 2),1)), as.matrix(addmargins(table3,1))[,5])
as.matrix(prop.table(table3, 2),1)
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(prop.table(addmargins(table3)))[,5]
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(prop.table(addmargins(table3)))[,5])
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(prop.table(addmargins(table3)),1)[,5])
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(prop.table(addmargins(table3)),2)[,5])
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(prop.table(addmargins(table3,2)))[,5])
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(prop.table(addmargins(table3,2)),1)[,5])
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(addmargins(table3,2)[,5])
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(addmargins(table3,2))[,5])
as.matrix(addmargins(table3,2))[,5]
addmargins(as.matrix(addmargins(table3,2))[,5])
sum(as.matrix(addmargins(table3,2))[,5])
cbind( as.matrix(addmargins(table3,2))[,5], sum(as.matrix(addmargins(table3,2))[,5]))
rbind( as.matrix(addmargins(table3,2))[,5], sum(as.matrix(addmargins(table3,2))[,5]))
as.matrix(addmargins(table3,2))[,5] + sum(as.matrix(addmargins(table3,2))[,5])
as.matrix(addmargins(table3,2))[,5] /sum(as.matrix(addmargins(table3,2))[,5])
cbind(as.matrix(prop.table(table3, 2),1), as.matrix(addmargins(table3,2))[,5] /sum(as.matrix(addmargins(table3,2))[,5]))
table3
quetelet
addmargins(table3)
expected
addmargins(table3)/150
table3/150
pearson
0.1296 - 0.1296
(-0.36000000-0.1296)/0.1296
(-0.36000000-0.1296)^2/0.1296
(as.array(prop.table(table2))
)
(as.array(prop.table(table2))- expected )^2)
(as.array(prop.table(table2))- expected
)
(-0.36000000-0.1296)
expected
(as.array(prop.table(table2))- as.array(expected)
)
(-0.36000000-0.1296)^2/0.1296
table3 <- as.matrix(prop.table(table2))
pearson[1,1] <- ((table3[1,1]-expected[1,1])/expected[1,1])
pearson
table3[1,1]
(0.36000000-0.1296)^2/0.1296
table3 <- as.matrix(prop.table(table2))
pearson[1,1] <- ((table3[1,1]-expected[1,1])^2/expected[1,1])
table3[1,1]
pearson
(0.36-0.1296)^2/0.1296
(1-0.36)/0.36
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
setwd("C:/Users/Rodrigo/Google Drive/Coursera Courses/R Programming/R Data Files")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
setwd("C:/Users/Rodrigo/Google Drive/Coursera Courses/R Programming/R Data Files")
submit()
submit()
setwd("C:/Users/Rodrigo/Google Drive/Coursera Courses/R Programming/R Data Files")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('C:/Users/Rodrigo/Google Drive/Coursera Courses/R Programming/R Data Files/best.R')
best("NY", "heart attack")
outcome_complete <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_complete[, 11] <- as.numeric(outcome_complete[, 11])
outcome_complete[, 17] <- as.numeric(outcome_complete[, 17])
outcome_complete[, 23] <- as.numeric(outcome_complete[, 23])
outcome_ordered <- outcome_complete[order(outcome_complete$Hospital.Name),]
state = "NY"
outcome = "heart attack"
outcome_simple <- outcome_complete[,c(2,7,11)]
outcome_cc <- complete.cases(outcome_simple)
outcome_simple <- outcome_simple[outcome_cc,]
outcome_st <- subset(outcome_simple, outcome_simple$State == state)
head(outcome_st)
View(outcome_st)
outcome_st <- outcome_st[order(outcome_st[,3], outcome_st[,1])]
outcome_st <- outcome_st[,order(outcome_st[,3], outcome_st[,1])]
outcome_st <- outcome_st[,c(order(outcome_st[,3], outcome_st[,1]))]
head(order(outcome_st[,3], outcome_st[,1]))
order(outcome_st[,3], outcome_st[,1])
order(outcome_st[,3])
outcome_complete <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome_complete[, 11] <- as.numeric(outcome_complete[, 11])
outcome_complete[, 17] <- as.numeric(outcome_complete[, 17])
outcome_complete[, 23] <- as.numeric(outcome_complete[, 23])
outcome_ordered <- outcome_complete[order(outcome_complete$Hospital.Name),]
outcome_st <- outcome_st[order(outcome_st[,3], outcome_st[,1])]
outcome_st <- outcome_st[order(outcome_st[,3], outcome_st[,1]),]
source('C:/Users/Rodrigo/Google Drive/Coursera Courses/R Programming/R Data Files/best.R')
submit()
submit()
submit()
